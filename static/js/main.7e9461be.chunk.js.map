{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["externalBoard","initialPositions","checkRow","position","board","remainder","startPosition","value","row","slice","splice","includes","checkColumn","arr","step","index","push","checkArea","array","x","y","Math","floor","xZero","yZero","pos","SquareButton","props","className","Square","currentPostion","col","type","onChange","event","intValue","parseInt","target","squares","val","setVal","console","log","Board","React","useState","values","setValues","status","setStatus","useEffect","endGame","length","gameStatus","renderSquare","i","v","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e9461be.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst externalBoard = [9, null, null, 6, 7, null, null, null, null, null, null, 6, 8, null, null, 4, 7, null, 8, null, null, null, 1, null, null, null, 3, null, null, 3, null, null, null, null, null, 1, null, null, 5, 4, null, 6, 9, null, null, 6, null, null, null, null, null, 3, null, null, 3, null, null, null, 6, null, null, null, 8, null, 6, 8, null, null, 5, 2, null, null, null, null, null, null, 8, 2, null, null, 6];\nconst initialPositions =[0, 3, 4, 11,12,15,16,18,22,26,29,35,38,39,41,42,45,51,54,58,62,64,65,68,69,76,77,80];\n\nconst gameStatus = (board) => {\n  // iterate through each position in the array\n  // for each position run the three functions\n  // Check row\n  // Check Column\n  // Check area\n  for (let index = 0; index < board.length; index++) { \n    const collective = checkRow(index, board) && checkColumn(index, board) && checkArea(index, board)\n    if (! collective) {\n      console.log(`failure at ${index}`)\n      console.log(`check row: ${checkRow(index, board)}`)\n      console.log(`check column: ${checkColumn(index, board)}`)\n      console.log(`check area: ${checkArea(index, board)}`)\n      return false;\n    }\n  }\n  return true;\n}\n\n\nconst checkRow = (position, board)  => {\n  const remainder = position % 9;\n  const startPosition = position - remainder;\n  const value = board[position]\n  let row = board.slice(startPosition, startPosition+9);\n  row.splice(remainder, 1)\n  // console.log(`row: ${row}`)\n  // console.log(`postion: ${position}`)\n  // console.log(`board[position]: ${value}`)\n  if (row.includes(value) && value !== null){\n    return false;\n  } else {\n    return true;\n  }\n}\n\nconst checkColumn = (position, board) => {\n  const remainder = position % 9;\n  const value = board[position]\n  let arr = [];\n  for (let step = 0; step < 9; step++) {\n    const index = remainder + step*9;\n    if (index !== position){\n      arr.push(\n        board[index]\n      );\n    }\n  }\n  // console.log(`column: ${arr}`)\n\n  if (arr.includes(value) && value !== null){\n    return false;\n  } else {\n    return true;\n  };\n}\n\nconst checkArea = (position, board) => {\n  let array = [];\n  const x = position % 9;\n  const y = Math.floor(position/9);\n  const xZero = Math.floor(x/3)*3;\n  const yZero = Math.floor(y/3)*3;\n  const value = board[position];\n  for (let step = 0; step < 9; step++) {\n    const xOne = xZero + step % 3;\n    const yOne = yZero + Math.floor(step/3);\n    const pos = xOne + yOne * 9;\n    if (pos !== position){\n      array.push(board[pos]);\n    }\n  }\n  if (array.includes(value) && value !== null){\n    return false;\n  } else {\n    return true;\n  };\n}\n\t\t\n\nconst SquareButton = (props) => {\n  return (\n    <form className=\"square\">\n      {props.value}\n    </form>\n  );\n}\n\n\nconst Square = (props) => {\n  const currentPostion = props.row*9 + props.col\n\n  const handleChange = (event) => {\n    const intValue = parseInt(event.target.value)\n    const squares = props.val.squares.slice();\n    squares[currentPostion] = intValue;\n    props.setVal({\n      squares: squares\n    });\n    console.log(squares)\n  }\n\n  return (\n    <form className=\"square\">\n      <input type=\"text\" className=\"input_value\" onChange={handleChange}/>\n    </form>\n  );\n}\n\nconst Board = () => {\n\n  const [values, setValues] = React.useState(\n    {squares: externalBoard},\n  );\n\n  const [status, setStatus] = React.useState(\n    'Sudoku'\n  );\n\n  //to do - some type of validation of values - \n  //  is it a valid value (1-9)\n  //  is it a valid entry given the board\n  //  is the game over\n  //  sudoku status\n  //  some type of way of getting random boards for sudoku \n  //    flask app?\n  //    input that matches the board\n  React.useEffect(() => {\n    const endGame = gameStatus(values.squares);\n    console.log(`endgame: ${endGame}`)\n    if (!endGame){\n      setStatus('Board Conflict: Invalid Move');\n    } else if(!values.squares.includes(null)) {\n      setStatus('Game Complete!');\n    };\n  }, [values]); \n    \n  const renderSquare = (i, v) => {\n    const currentPostion = i*9 + v\n\n    if (initialPositions.includes(currentPostion)) {\n      // console.log(externalBoard[currentPostion])\n      return( \n        <>\n          <SquareButton value={externalBoard[currentPostion]}/>\n        </>\n      );\n    } else {\n      return( \n        <>\n          <Square row={i} col={v} val={values} setVal={setValues}/>\n        </>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0, 0)}\n        {renderSquare(0, 1)}\n        {renderSquare(0, 2)}\n        {renderSquare(0, 3)}\n        {renderSquare(0, 4)}\n        {renderSquare(0, 5)}\n        {renderSquare(0, 6)}\n        {renderSquare(0, 7)}\n        {renderSquare(0, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(1, 0)}\n        {renderSquare(1, 1)}\n        {renderSquare(1, 2)}\n        {renderSquare(1, 3)}\n        {renderSquare(1, 4)}\n        {renderSquare(1, 5)}\n        {renderSquare(1, 6)}\n        {renderSquare(1, 7)}\n        {renderSquare(1, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(2, 0)}\n        {renderSquare(2, 1)}\n        {renderSquare(2, 2)}\n        {renderSquare(2, 3)}\n        {renderSquare(2, 4)}\n        {renderSquare(2, 5)}\n        {renderSquare(2, 6)}\n        {renderSquare(2, 7)}\n        {renderSquare(2, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3, 0)}\n        {renderSquare(3, 1)}\n        {renderSquare(3, 2)}\n        {renderSquare(3, 3)}\n        {renderSquare(3, 4)}\n        {renderSquare(3, 5)}\n        {renderSquare(3, 6)}\n        {renderSquare(3, 7)}\n        {renderSquare(3, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(4, 0)}\n        {renderSquare(4, 1)}\n        {renderSquare(4, 2)}\n        {renderSquare(4, 3)}\n        {renderSquare(4, 4)}\n        {renderSquare(4, 5)}\n        {renderSquare(4, 6)}\n        {renderSquare(4, 7)}\n        {renderSquare(4, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(5, 0)}\n        {renderSquare(5, 1)}\n        {renderSquare(5, 2)}\n        {renderSquare(5, 3)}\n        {renderSquare(5, 4)}\n        {renderSquare(5, 5)}\n        {renderSquare(5, 6)}\n        {renderSquare(5, 7)}\n        {renderSquare(5, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6, 0)}\n        {renderSquare(6, 1)}\n        {renderSquare(6, 2)}\n        {renderSquare(6, 3)}\n        {renderSquare(6, 4)}\n        {renderSquare(6, 5)}\n        {renderSquare(6, 6)}\n        {renderSquare(6, 7)}\n        {renderSquare(6, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(7, 0)}\n        {renderSquare(7, 1)}\n        {renderSquare(7, 2)}\n        {renderSquare(7, 3)}\n        {renderSquare(7, 4)}\n        {renderSquare(7, 5)}\n        {renderSquare(7, 6)}\n        {renderSquare(7, 7)}\n        {renderSquare(7, 8)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(8, 0)}\n        {renderSquare(8, 1)}\n        {renderSquare(8, 2)}\n        {renderSquare(8, 3)}\n        {renderSquare(8, 4)}\n        {renderSquare(8, 5)}\n        {renderSquare(8, 6)}\n        {renderSquare(8, 7)}\n        {renderSquare(8, 8)}\n      </div>\n    </div>\n  );\n}\n\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}